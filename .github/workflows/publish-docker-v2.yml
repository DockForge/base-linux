name: 🐳 Docker Images

on:
  workflow_dispatch:
  push:
    branches:
      - '**'

env:
    BaseOS: alpine

jobs:
  build-and-push:
    runs-on: ubuntu-latest    
    outputs:
        SHA_SHORT: ${{ steps.fetch-sha.outputs.SHA_SHORT }}
        BRANCH_NAME: ${{ steps.extract-branch-name.outputs.BRANCH_NAME }}
    strategy:
      matrix:
        platform: [amd64, arm64] # arm64, s390x

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Fetch Commit SHA
        id: fetch-sha
        run: |
            echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
            echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Extract Branch Name
        id: extract-branch-name
        run: |
            echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
            echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_OUTPUT

      - name: ENV Variables
        run: |
          source $GITHUB_ENV
          echo "BRANCH_NAME: ${BRANCH_NAME}"
          echo "SHA_SHORT: ${SHA_SHORT}"
          echo "GITHUB_REF_NAME: ${GITHUB_REF_NAME}"

      - name: Define Tags
        run: |
          source $GITHUB_ENV
          TEMP_TAGS="dublok/base-linux:${{ env.BaseOS }}-${{ matrix.platform }}-${BRANCH_NAME}-${SHA_SHORT},dublok/base-linux:${{ env.BaseOS }}-${{ matrix.platform }}-${BRANCH_NAME},dublok/base-linux:${{ env.BaseOS }}-${{ matrix.platform }}-${SHA_SHORT}"
          echo "TEMP_TAGS=${TEMP_TAGS}" >> $GITHUB_ENV

          DEFAULT_TAGS="dublok/base-linux:${{ env.BaseOS }}-${GITHUB_REF_NAME},dublok/base-linux:${{ env.BaseOS }}-${SHA_SHORT}"
          echo "DEFAULT_TAGS=${DEFAULT_TAGS}" >> $GITHUB_ENV
          
          if [[ $GITHUB_REF_NAME == v* ]]; then
          DEFAULT_TAGS="${DEFAULT_TAGS},dublok/base-linux:${{ env.BaseOS }}-latest"
            echo "DEFAULT_TAGS=${DEFAULT_TAGS}" >> $GITHUB_ENV
          fi

      - name: Tags
        run: |
          source $GITHUB_ENV
          echo "DEFAULT_TAGS: ${DEFAULT_TAGS}"
          echo "TEMP_TAGS: ${TEMP_TAGS}"
          
      - name: Set Build Args
        run: |
          echo "BUILD_ARGS=TARGETPLATFORM=${{ matrix.platform }}" >> $GITHUB_ENV
          if [ "${{ matrix.platform }}" == "amd64" ]; then
            echo "BUILD_ARGS=${{ env.BUILD_ARGS }} ARCH=x86_64" >> $GITHUB_ENV
          elif [ "${{ matrix.platform }}" == "arm64" ]; then
            echo "BUILD_ARGS=${{ env.BUILD_ARGS }} ARCH=aarch64" >> $GITHUB_ENV
          fi

      - name: Print Build Args
        run: |
          source $GITHUB_ENV
          echo "BUILD_ARGS: ${BUILD_ARGS}"

      - name: Build and Push Docker Images
        uses: docker/build-push-action@v5.0.0
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ env.TEMP_TAGS }}
          build-args: ${{ env.BUILD_ARGS }}

  create-and-push-manifest:
    needs: build-and-push
    runs-on: ubuntu-latest    
    env:
        SHA_SHORT: ${{ needs.build-and-push.outputs.SHA_SHORT }}
        BRANCH_NAME: ${{ needs.build-and-push.outputs.BRANCH_NAME }}
    steps:

      - name: Print ENV Variables
        run: |
            echo "SHA_SHORT: ${{ env.SHA_SHORT }}"
            echo "BRANCH_NAME: ${{ env.BRANCH_NAME }}"
        

      - name: Fetch Tags from Docker Hub
        run: |
            SHA_SHORT=${{ env.SHA_SHORT }}
            RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.DOCKER_TOKEN }}" "https://hub.docker.com/v2/repositories/dublok/base-linux/tags?name=$SHA_SHORT")
            TAGS=$(echo $RESPONSE | jq -r '.results[].name')
            echo "Fetched tags: $TAGS"

      - name: Create and Push Docker Manifest
        run: |
            BRANCH_NAME=${{ env.BRANCH_NAME }}
            MANIFEST_CMD="docker manifest create dublok/base-linux:alpine-$BRANCH_NAME"
            for tag in $TAGS; do
            MANIFEST_CMD+=" --amend dublok/base-linux:${tag}"
            done
            echo "Running command: $MANIFEST_CMD"
            DOCKER_CLI_EXPERIMENTAL=enabled $MANIFEST_CMD
            DOCKER_CLI_EXPERIMENTAL=enabled docker manifest push dublok/base-linux:alpine-$BRANCH_NAME
        shell: /usr/bin/bash -e {0}

    #   - name: Log in to DockerHub
    #     uses: docker/login-action@v3
    #     with:
    #       username: ${{ secrets.DOCKER_USERNAME }}
    #       password: ${{ secrets.DOCKER_TOKEN }}

    #   - name: Create and Push Docker Manifest
    #     run: |
    #       DOCKER_CLI_EXPERIMENTAL=enabled docker manifest create ***/base-linux:alpine-latest \
    #         --amend dublok/base-linux:alpine-amd64-${{ github.sha }} \
    #         --amend dublok/base-linux:alpine-arm64-${{ github.sha }}
    #       DOCKER_CLI_EXPERIMENTAL=enabled docker manifest push ***/base-linux:alpine-latest
    #     shell: /usr/bin/bash -e {0}
        